--- a/src/dhcp.c	2013-12-08 23:58:29.000000000 +0800
+++ b/src/dhcp.c	2013-12-10 10:18:24.000000000 +0800
@@ -146,7 +146,7 @@
   struct iovec iov;
   ssize_t sz; 
   int iface_index = 0, unicast_dest = 0, is_inform = 0;
-  struct in_addr iface_addr;
+  struct in_addr iface_addr, *addrp = NULL;
   struct iface_param parm;
 #ifdef HAVE_LINUX_NETWORK
   struct arpreq arp_req;
@@ -272,12 +272,10 @@
     {
       ifr.ifr_addr.sa_family = AF_INET;
       if (ioctl(daemon->dhcpfd, SIOCGIFADDR, &ifr) != -1 )
-	iface_addr = ((struct sockaddr_in *) &ifr.ifr_addr)->sin_addr;
-      else
-	{
-	  my_syslog(MS_DHCP | LOG_WARNING, _("DHCP packet received on %s which has no address"), ifr.ifr_name);
-	  return;
-	}
+	  {
+        addrp = &iface_addr;
+        iface_addr = ((struct sockaddr_in *) &ifr.ifr_addr)->sin_addr;
+	  }
       
       for (tmp = daemon->dhcp_except; tmp; tmp = tmp->next)
 	if (tmp->name && wildcard_match(tmp->name, ifr.ifr_name))
@@ -295,7 +293,7 @@
       parm.relay_local.s_addr = 0;
       parm.ind = iface_index;
       
-      if (!iface_check(AF_INET, (struct all_addr *)&iface_addr, ifr.ifr_name, NULL))
+      if (!iface_check(AF_INET, (struct all_addr *)addrp, ifr.ifr_name, NULL))
 	{
 	  /* If we failed to match the primary address of the interface, see if we've got a --listen-address
 	     for a secondary */
@@ -315,8 +313,14 @@
 	  complete_context(match.addr, iface_index, NULL, match.netmask, match.broadcast, &parm);
 	}    
       
+      if (!addrp)
+      {
+        my_syslog(MS_DHCP | LOG_WARNING, _("DHCP packet received on %s which has no address"), ifr.ifr_name);
+        return;
+      }
+
       if (!iface_enumerate(AF_INET, &parm, complete_context))
-	return;
+	  return;
 
       /* We're relaying this request */
       if  (parm.relay_local.s_addr != 0 &&
