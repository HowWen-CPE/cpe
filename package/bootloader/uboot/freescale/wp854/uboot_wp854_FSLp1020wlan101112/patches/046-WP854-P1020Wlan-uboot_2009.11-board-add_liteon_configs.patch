--- u-boot-freescale-p1020-sku/include/configs/P1020_SKU.h	2012-07-11 19:41:34.467329687 -0700
+++ u-boot-liteon-wp854-openwrt/include/configs/P1020_SKU.h	2011-11-08 23:26:37.678802000 -0800
@@ -28,27 +28,96 @@
 #ifndef __CONFIG_H
 #define __CONFIG_H
 
-/* High Level Configuration Options */
-#define CONFIG_P1010			1
-#define CONFIG_BOOKE			1	/* BOOKE */
-#define CONFIG_E500				1	/* BOOKE e500 family */
-#define CONFIG_MPC85xx			1	/* MPC8540/60/55/41/48/P1020/P2020, etc */
+/*debug switch setup,Added by sirian. 2011-02-12*/
+#undef DEBUG
+
+/*To fix pci scanning failed, added by sirian, 2011-06-22----->*/
+#define CONFIG_PCI_BOOTDELAY	100	/* enable pci bootdelay variable*/
+/*<-----end sirian*/
+
+/*Switch for ethernet 10M, 100M testing*/
+#define BCM_ETHERNET_HW_TEST
+
+#ifdef CONFIG_MK_P1010RDB //siiran 
+#define CONFIG_P1010
+#endif
+
+#ifdef CONFIG_MK_P1011RDB
+#define CONFIG_P1011
+#endif
 
 #ifdef CONFIG_MK_P1020SKU
 #define CONFIG_P1020		1
 #define CONFIG_P1020SKU	    1
 #endif
 
+#ifdef CONFIG_MK_P2020SKU
+#define CONFIG_P2020		1
+#define CONFIG_P2020SKU	    1
+#endif
+
 #ifdef CONFIG_MK_MSBG20
 #define CONFIG_P1020		1
 #define CONFIG_MSBG20	    1
 #endif
 
-#ifndef CONFIG_MP
-#define CONFIG_MP			1
+/*To fix pci scanning failed, added by sirian, 2011-06-22 ----->*/
+#define FSL_SRDSCR3_OFFS 0xc
+#define CONFIG_SYS_MPC85xx_SERDES3_OFFSET 0xE3000
+#define CONFIG_SYS_MPC85xx_SERDES3_ADDR \
+	(CONFIG_SYS_IMMR + CONFIG_SYS_MPC85xx_SERDES3_OFFSET)
+/*<-----end sirian*/
+
+
+
+/*------------sirian------------->*/
+/* Boot using DDR for eSDHC/eSPI/NAND boot because L2 Cache size
+ * on these platforms is 256K.
+ */
+/*
+ * Due to Bug using L2 eSDHC/NAND/eSPI gives hang on power-on,
+ * But after doing soft reset it works fine. That's why make use 
+ * of DDR instead of L2 on all P1 & P2 platforms.
+ */
+#define CONFIG_SYS_FSL_BOOT_DDR
+
+#ifdef CONFIG_MK_RAMBOOT
+#define CONFIG_MK_SDCARD
+#endif
+
+#ifdef CONFIG_MK_NAND
+#define CONFIG_NAND_U_BOOT		1
+#define CONFIG_RAMBOOT_NAND		1
+#ifdef CONFIG_SYS_FSL_BOOT_DDR
+#define CONFIG_RAMBOOT_TEXT_BASE	0x01001000
+#else
+#define CONFIG_RAMBOOT_TEXT_BASE	0xf8f82000
+#endif
+#endif
+
+#ifdef CONFIG_MK_SDCARD
+#define CONFIG_RAMBOOT_SDCARD		1
+#ifdef CONFIG_SYS_FSL_BOOT_DDR
+#define CONFIG_RAMBOOT_TEXT_BASE	0x11000000
+#else
+#define CONFIG_RAMBOOT_TEXT_BASE	0xf8f80000
+#endif
 #endif
-#define CONFIG_NUM_CPUS		2	/* Number of CPUs in the system */
 
+#ifdef CONFIG_MK_SPIFLASH
+#define CONFIG_RAMBOOT_SPIFLASH		1
+#ifdef CONFIG_SYS_FSL_BOOT_DDR
+#define CONFIG_RAMBOOT_TEXT_BASE	0x11000000
+#else
+#define CONFIG_RAMBOOT_TEXT_BASE	0xf8f80000
+#endif
+#endif
+/*<------------sirian end-----------*/
+
+/* High Level Configuration Options */
+#define CONFIG_BOOKE			1	/* BOOKE */
+#define CONFIG_E500				1	/* BOOKE e500 family */
+#define CONFIG_MPC85xx			1	/* MPC8540/60/55/41/48/P1020/P2020, etc */
 #define CONFIG_FSL_ELBC		1	/* Enable eLBC Support */
 #define CONFIG_PCI			1	/* Enable PCI/PCIE */
 #define CONFIG_PCIE1		1	/* PCIE controler 1 (slot 1) */
@@ -66,8 +135,21 @@
 #define CONFIG_LIBATA
 #define CONFIG_LBA48
 
+/*---------sirian------------->*/
+/*
+ * eSPI - Enhanced SPI
+ */
+#define CONFIG_SPI_FLASH
+//#define CONFIG_SPI_FLASH_SPANSION
+#define CONFIG_SPI_FLASH_MACRONIX
+
+#define CONFIG_HARD_SPI
+#define CONFIG_FSL_ESPI
 
-#undef CONFIG_HARD_SPI
+#define CONFIG_CMD_SF
+#define CONFIG_SF_DEFAULT_SPEED 40000000
+#define CONFIG_SF_DEFAULT_MODE 0
+/*<-----------end sirian-------*/
 
 #ifndef __ASSEMBLY__
 extern unsigned long get_board_sys_clk(unsigned long dummy);
@@ -76,6 +158,23 @@
 #define CONFIG_SYS_CLK_FREQ	66666666 /* 100000000 sysclk for P10xx20xxSKU */
 #define CONFIG_DDR_CLK_FREQ	66666666 /* DDRCLK on P10xx_p20xx SKU */
 
+
+#define CONFIG_NUM_CPUS  2	/* Number of CPUs in the system  for P1020SKU*/
+//#define CONFIG_NUM_CPUS  1	/* Number of CPUs in the system  for P1011SKU*/
+
+#if defined(CONFIG_NUM_CPUS) && (CONFIG_NUM_CPUS  > 1)
+#define CONFIG_MP  1
+#else
+#undef  CONFIG_MP
+#endif
+
+/* TSECV2 */
+#if defined(CONFIG_P1020)
+#define CONFIG_TSECV2	1
+#endif
+
+
+
 /*
  * These can be toggled for performance analysis, otherwise use default.
  */
@@ -90,7 +189,7 @@
 
 #define CONFIG_SYS_MEMTEST_START	0x00000000	/* memtest works on */
 #define CONFIG_SYS_MEMTEST_END		0x1fffffff
-#define CONFIG_PANIC_HANG				/* do not reset board on panic */
+#define CONFIG_PANIC_HANG	/* do not reset board on panic */
 
  /*
   * Config the L2 Cache as L2 SRAM
@@ -137,22 +236,25 @@
 #undef CONFIG_FSL_DDR_INTERACTIVE
 #undef CONFIG_SPD
 #undef CONFIG_SPD_EEPROM
-#undef CONFIG_DDR_SPD				/* Use SPD EEPROM for DDR setup on the board */
+#undef CONFIG_DDR_SPD	/* Use SPD EEPROM for DDR setup on the board */
 
 
 #undef CONFIG_DDR_DLL
+
 #define CONFIG_MEM_INIT_VALUE	0xDeadBeef
 
 #ifndef CONFIG_SPD
-#define CONFIG_SYS_SDRAM_SIZE	1024 //512 
+//#define CONFIG_SYS_SDRAM_SIZE	1024 /*Define DDR size for freescale EVB , sirian, 2011-06-30*/
+#define CONFIG_SYS_SDRAM_SIZE	512 /*Define DDR size for liteon DVT, sirian, 2011-04-18*/
 #endif
+
 #define CONFIG_SYS_DDR_SDRAM_BASE	0x00000000
 #define CONFIG_SYS_SDRAM_BASE		CONFIG_SYS_DDR_SDRAM_BASE
 
 
 #define CONFIG_NUM_DDR_CONTROLLERS		1
 #define CONFIG_DIMM_SLOTS_PER_CTLR		1
-#define CONFIG_CHIP_SELECTS_PER_CTRL	2
+#define CONFIG_CHIP_SELECTS_PER_CTRL	2 /*why setting 2? sirian*/
 
 
 /* copy from p2020ds, maybe need modify, by luchen ?? */
@@ -177,31 +279,33 @@
 #undef CONFIG_CLOCKS_IN_MHZ
 
 /*
- * Memory map
+ * Memory map(Local address memory map)
  *
- * 0x0000_0000	0x7fff_ffff	DDR				2GB cacheablen (at most)
- * 0x8000_0000	0xdfff_ffff	PCI Express Mem	1.5G non-cacheable(PCIe * 3)
- * 0xffc0_0000	0xffc3_ffff	PCI IO range		256k non-cacheable
+ * 0x0000_0000	0x7fff_ffff	        DDR				2GB cacheablen (at most)
+ * 0x8000_0000	0xdfff_ffff	       PCI Express Mem	1.5G non-cacheable(PCIe * 3)
+ * 0xffc0_0000	        0xffc3_ffff       PCI IO range		256k non-cacheable
  *
  * Localbus cacheable (TBD)
  * 0xXXXX_XXXX	0xXXXX_XXXX	SRAM			YZ M Cacheable
  *
  * Localbus non-cacheable
- * 0xee00_0000	0xefff_ffff	FLASH			32M non-cacheable
- * 0xff90_0000      0xff9f_ffff      VSC7385 switch    1M non-cacheable 
- * 0xffa0_0000	0xffaf_ffff	CPLD			1M non-cacheable
- * 0xffb0_0000	0xffb7_ffff	L2 SDRAM(REV.)	512K cacheable(optional)
- * 0xffd0_0000	0xffd0_3fff	L1 for stack		16K Cacheable TLB0
- * 0xffe0_0000	0xffef_ffff	CCSR			1M non-cacheable
+ * 0xee00_0000	0xefff_ffff	      FLASH			64M non-cacheable
+ * 0xff90_0000      0xff9f_ffff         VSC7385 switch        1M non-cacheable 
+ * 0xffa0_0000	0xffaf_ffff	              NAND			1M non-cacheable
+ * 0xffb0_0000	0xffb7_ffff	      L2 SDRAM(REV.)	512K cacheable(optional)
+ * 0xffd0_0000	0xffd0_3fff	     L1 for stack		16K Cacheable TLB0
+ * 0xffe0_0000	0xffef_ffff	             CCSR			        1M non-cacheable
  */
 
 /*
  * Local Bus Definitions
  */
 #ifdef CONFIG_MSBG20
-#define CONFIG_SYS_FLASH_BASE		0xec000000
+//#define CONFIG_SYS_FLASH_BASE		0xec000000   /* start of FLASH 64M , 2011-03-10*/
+#define CONFIG_SYS_FLASH_BASE		0xee000000         /* start of FLASH 32M , 2011-04-18*/
 #else
-#define CONFIG_SYS_FLASH_BASE		0xec000000	/* start of FLASH 64M */
+//#define CONFIG_SYS_FLASH_BASE		0xec000000   /* start of FLASH 64M , 2011-03-10*/
+#define CONFIG_SYS_FLASH_BASE		0xee000000         /* start of FLASH 32M , 2011-04-18*/
 #endif
 
 #ifdef CONFIG_PHYS_64BIT
@@ -222,7 +326,7 @@
 #define CONFIG_SYS_FLASH_QUIET_TEST
 #define CONFIG_FLASH_SHOW_PROGRESS 45 		/* count down from 45/5: 9..1 */
 
-#define CONFIG_SYS_MAX_FLASH_BANKS	1		/* number of banks */
+#define CONFIG_SYS_MAX_FLASH_BANKS 1		/* number of banks */
 
 #ifdef CONFIG_MSBG20
 #define CONFIG_SYS_MAX_FLASH_SECT	512		/* sectors per device */
@@ -236,6 +340,13 @@
 
 #define CONFIG_SYS_MONITOR_BASE	TEXT_BASE	/* start of monitor */
 
+#if defined(CONFIG_SYS_SPL) || defined(CONFIG_RAMBOOT_NAND) \
+	|| defined(CONFIG_RAMBOOT_SDCARD) || defined(CONFIG_RAMBOOT_SPIFLASH)
+#define CONFIG_SYS_RAMBOOT
+#else
+#undef CONFIG_SYS_RAMBOOT
+#endif
+
 #define CONFIG_FLASH_CFI_DRIVER
 #define CONFIG_SYS_FLASH_CFI
 #define CONFIG_SYS_FLASH_EMPTY_INFO
@@ -256,29 +367,67 @@
 #define CONFIG_SYS_MONITOR_LEN		(256 * 1024) /* Reserve 256 kB for Mon */
 #define CONFIG_SYS_MALLOC_LEN		(1024 * 1024)	/* Reserved for malloc */
 
-#ifdef CONFIG_SDCARD_U_BOOT
-#define CONFIG_SYS_RESERVED_LAW0	0
-#endif
-
-#define CONFIG_SYS_CPLD_BASE		0xffa00000
-#ifdef CONFIG_PHYS_64BIT
-#define CONFIG_SYS_CPLD_BASE_PHYS	0xfffa00000ull
+#ifndef CONFIG_NAND_SPL
+#define CONFIG_SYS_NAND_BASE		0xffa00000
 #else
-#define CONFIG_SYS_CPLD_BASE_PHYS	CONFIG_SYS_CPLD_BASE
+#define CONFIG_SYS_NAND_BASE		0xfff00000
 #endif
-
-/* CPLD config size: 1Mb */
-#define CONFIG_CPLD_BR_PRELIM	(CONFIG_SYS_CPLD_BASE_PHYS \
-				| BR_PS_8		/* Port Size = 8 bit */ \
+#define CONFIG_SYS_NAND_BASE_PHYS	CONFIG_SYS_NAND_BASE
+#define CONFIG_SYS_NAND_BASE_LIST	{CONFIG_SYS_NAND_BASE}
+#define CONFIG_SYS_MAX_NAND_DEVICE	1
+#define NAND_MAX_CHIPS			1
+#define CONFIG_MTD_NAND_VERIFY_WRITE
+#define CONFIG_CMD_NAND			1
+#define CONFIG_NAND_FSL_ELBC		1
+
+#define CONFIG_SYS_NAND_BLOCK_SIZE	(128 * 1024) /*modified by sirian, 2011-03-15*/
+
+/* NAND boot: 4K NAND loader config */
+#ifdef CONFIG_SYS_FSL_BOOT_DDR
+#define CONFIG_SYS_NAND_SPL_SIZE	0x1000
+#define CONFIG_SYS_NAND_U_BOOT_SIZE	((512 << 10) + CONFIG_SYS_NAND_SPL_SIZE)
+#define CONFIG_SYS_NAND_U_BOOT_DST	(0x01000000 - CONFIG_SYS_NAND_SPL_SIZE)
+#define CONFIG_SYS_NAND_U_BOOT_START	0x01000000
+#define CONFIG_SYS_NAND_U_BOOT_OFFS	(0)
+#define CONFIG_SYS_NAND_U_BOOT_RELOC	0x00010000
+#define CONFIG_SYS_NAND_U_BOOT_RELOC_SP	(CONFIG_SYS_NAND_U_BOOT_RELOC + 0x10000)
+#else
+#define CONFIG_SYS_NAND_SPL_SIZE	0x1000
+#define CONFIG_SYS_NAND_U_BOOT_SIZE	((512 << 10) - 0x2000)
+#define CONFIG_SYS_NAND_U_BOOT_DST	(CONFIG_SYS_INIT_L2_ADDR)
+#define CONFIG_SYS_NAND_U_BOOT_START	(CONFIG_SYS_INIT_L2_ADDR + CONFIG_SYS_NAND_SPL_SIZE)
+#define CONFIG_SYS_NAND_U_BOOT_OFFS	(0)
+#define CONFIG_SYS_NAND_U_BOOT_RELOC	(CONFIG_SYS_INIT_L2_END - 0x2000)
+#define CONFIG_SYS_NAND_U_BOOT_RELOC_SP		((CONFIG_SYS_INIT_L2_END - 1) & ~0xF)
+#endif
+
+/* NAND flash config */
+#define CONFIG_NAND_BR_PRELIM	(CONFIG_SYS_NAND_BASE_PHYS \
+				| (2<<BR_DECC_SHIFT)	/* Use HW ECC */ \
+				| BR_PS_8	/* Port Size = 8 bit */ \
+				| BR_MS_FCM		/* MSEL = FCM */ \
 				| BR_V)			/* valid */
 
-#define CONFIG_CPLD_OR_PRELIM	(0xfff009f7)
-
-#define CONFIG_SYS_BR0_PRELIM	CONFIG_FLASH_BR_PRELIM  /* NOR Base Address */
-#define CONFIG_SYS_OR0_PRELIM	CONFIG_FLASH_OR_PRELIM  /* NOR Options */
-#define CONFIG_SYS_BR3_PRELIM	CONFIG_CPLD_BR_PRELIM   /* EPLD Base Address */
-#define CONFIG_SYS_OR3_PRELIM	CONFIG_CPLD_OR_PRELIM   /* EPLD Options */
-
+#define CONFIG_NAND_OR_PRELIM	(0xFFF80000		/* length 512K */ \
+				| OR_FCM_PGS		/* Large Page, added by sirian, 2011-03-15*/ \
+				| OR_FCM_CSCT \
+				| OR_FCM_CST \
+				| OR_FCM_CHT \
+				| OR_FCM_SCY_1 \
+				| OR_FCM_TRLX \
+				| OR_FCM_EHTR)
+
+#ifdef CONFIG_RAMBOOT_NAND
+#define CONFIG_SYS_BR0_PRELIM  CONFIG_NAND_BR_PRELIM  /* NAND Base Address */
+#define CONFIG_SYS_OR0_PRELIM  CONFIG_NAND_OR_PRELIM  /* NAND Options */
+#define CONFIG_SYS_BR1_PRELIM  CONFIG_FLASH_BR_PRELIM  /* NOR Base Address */
+#define CONFIG_SYS_OR1_PRELIM  CONFIG_FLASH_OR_PRELIM  /* NOR Options */
+#else
+#define CONFIG_SYS_BR0_PRELIM  CONFIG_FLASH_BR_PRELIM  /* NOR Base Address */
+#define CONFIG_SYS_OR0_PRELIM  CONFIG_FLASH_OR_PRELIM  /* NOR Options */
+#define CONFIG_SYS_BR1_PRELIM  CONFIG_NAND_BR_PRELIM  /* NAND Base Address */
+#define CONFIG_SYS_OR1_PRELIM  CONFIG_NAND_OR_PRELIM  /* NAND Options */
+#endif
 
 /* Vsc7385 switch */
 #ifdef CONFIG_MSBG20
@@ -291,19 +440,20 @@
 				OR_GPCM_SCY_15 | OR_GPCM_SETA | OR_GPCM_TRLX | \
 				OR_GPCM_EHTR | OR_GPCM_EAD)
 #endif
+
 /* Serial Port - controlled on board with jumper J8
  * open - index 2
  * shorted - index 1
  */
-#define CONFIG_CONS_INDEX	1
+#define CONFIG_CONS_INDEX	1 /*here we choose UART0, if we want to use UART1, index=2*/
 #undef	CONFIG_SERIAL_SOFTWARE_FIFO
 #define CONFIG_SYS_NS16550
 #define CONFIG_SYS_NS16550_SERIAL
 #define CONFIG_SYS_NS16550_REG_SIZE	1
 #define CONFIG_SYS_NS16550_CLK		get_bus_freq(0)
 
-//#define CONFIG_SERIAL_MULTI	1 /* Enable both serial ports */
-//#define CONFIG_SYS_CONSOLE_IS_IN_ENV	/* determine from environment */
+#define CONFIG_SERIAL_MULTI	1 /* Enable both serial ports */
+#define CONFIG_SYS_CONSOLE_IS_IN_ENV	/* determine from environment */
 
 #define CONFIG_SYS_BAUDRATE_TABLE	\
 	{300, 600, 1200, 2400, 4800, 9600, 19200, 38400,115200}
@@ -338,7 +488,6 @@
 #define CONFIG_I2C_MULTI_BUS
 #define CONFIG_I2C_CMD_TREE
 #define CONFIG_SYS_I2C_SPEED		400000	/* I2C speed and slave address */
-#define CONFIG_SYS_I2C_EEPROM_ADDR	0x52
 #define CONFIG_SYS_I2C_SLAVE		0x7F
 #define CONFIG_SYS_I2C_NOPROBES	{{0,0x29}}/* Don't probe these addrs */
 #define CONFIG_SYS_I2C_OFFSET		0x3000
@@ -351,12 +500,13 @@
 #ifdef CONFIG_ID_EEPROM
 #define CONFIG_SYS_I2C_EEPROM_NXID
 #endif
-#define CONFIG_SYS_I2C_EEPROM_ADDR	0x52
+#define CONFIG_SYS_I2C_EEPROM_ADDR	0x50
+#define CONFIG_SYS_I2C_EEPROM_ADDR2	0x52
 #define CONFIG_SYS_I2C_EEPROM_ADDR_LEN 1
 #define CONFIG_SYS_EEPROM_BUS_NUM	1
 
 #define CONFIG_RTC_DS1337
-#define CONFIG_SYS_I2C_RTC_ADDR		0x67
+#define CONFIG_SYS_I2C_RTC_ADDR                0x68
 /*
  * General PCI
  * Memory space is mapped 1-1, but I/O space must start from 0.
@@ -421,19 +571,6 @@
 
 #endif	/* CONFIG_PCI */
 
-/* #define CONFIG_MISC_INIT_R */
-
-/************************************************************
- * USB support
- ************************************************************/
-
-#define CONFIG_CMD_FAT
-#define CONFIG_CMD_USB
-#define CONFIG_USB_STORAGE
-#define CONFIG_USB_EHCI
-#define CONFIG_USB_EHCI_FSL
-#define CONFIG_EHCI_HCD_INIT_AFTER_RESET
-#define CONFIG_SYS_USB_EHCI_REGS_BASE		(CONFIG_SYS_CCSRBAR+0x22000)
 
 #if defined(CONFIG_TSEC_ENET)
 
@@ -441,84 +578,90 @@
 #define CONFIG_NET_MULTI	1
 #endif
 
-#define CONFIG_TSECV2	1
 
 #define CONFIG_MII		1	/* MII PHY management */
 #define CONFIG_MII_DEFAULT_TSEC	1	/* Allow unregistered phys */
 #define CONFIG_TSEC1	1
 #define CONFIG_TSEC1_NAME	"eTSEC1"
-#if 0
+
+#if 0 /*Disable TSEC2 because not uesed, sirian, 2011-03-08*/
 #define CONFIG_TSEC2	1
 #define CONFIG_TSEC2_NAME	"eTSEC2"
 #endif
 #define CONFIG_TSEC3	1
 #define CONFIG_TSEC3_NAME	"eTSEC3"
 
-#ifdef CONFIG_MSBG20
-#define CONFIG_VSC7385_ENET 1
-#endif
-/* Vitesse 7385 */
-#ifdef CONFIG_VSC7385_ENET
-/* The size of the VSC7385 firmware image */
-#define CONFIG_VSC7385_IMAGE_SIZE	8192
-#endif
-
-#define TSEC1_PHY_ADDR		1
-#if 0
+#define TSEC1_PHY_ADDR		0 //freescale EVB 1, liteon 0
+#if 0 /*Disable TSEC2 because not uesed, sirian, 2011-03-08*/
 #define TSEC2_PHY_ADDR		0
 #endif
-#define TSEC3_PHY_ADDR		3
+#define TSEC3_PHY_ADDR		1 //freescale EVB 3,liteon 1
 
 #define TSEC1_FLAGS		(TSEC_GIGABIT | TSEC_REDUCED)
-#if 0
+#if 0 /*Disable TSEC2 because not uesed, sirian, 2011-03-08*/
 #define TSEC2_FLAGS		(TSEC_GIGABIT | TSEC_REDUCED)
 #endif
 #define TSEC3_FLAGS		(TSEC_GIGABIT | TSEC_REDUCED)
 
 #define TSEC1_PHYIDX		0
-#if 0
+#if 0 /*Disable TSEC2 because not uesed, sirian, 2011-03-08*/
 #define TSEC2_PHYIDX		0
 #endif
-
 #define TSEC3_PHYIDX		0
 
 #define CONFIG_ETHPRIME		"eTSEC1"
 
 #define CONFIG_PHY_GIGE		1	/* Include GbE speed/duplex detection */
 
-#define CONFIG_HAS_ETH0
-#if 1
-#define CONFIG_HAS_ETH1
-#define CONFIG_HAS_ETH2
+
+#ifdef CONFIG_MSBG20
+#define CONFIG_VSC7385_ENET 1
 #endif
+/* Vitesse 7385 */
+#ifdef CONFIG_VSC7385_ENET
+/* The size of the VSC7385 firmware image */
+#define CONFIG_VSC7385_IMAGE_SIZE	8192
+#endif
+
 #endif	/* CONFIG_TSEC_ENET */
 
-#ifdef CONFIG_PCIE3
-#define CONFIG_HAS_ETH3
-#define CONFIG_HAS_ETH4
-#endif
 
 /*
  * Environment
  */
-#if defined(CONFIG_NAND_U_BOOT)
-#define CONFIG_ENV_IS_IN_NAND	1
-#define CONFIG_ENV_SIZE		CONFIG_SYS_NAND_BLOCK_SIZE
-#define CONFIG_ENV_OFFSET	((512 * 1024) + CONFIG_SYS_NAND_BLOCK_SIZE)
-#elif !defined(CONFIG_SDCARD_U_BOOT)
-#define CONFIG_ENV_IS_IN_FLASH	1
-#if CONFIG_SYS_MONITOR_BASE > 0xfff80000
-#define CONFIG_ENV_ADDR		0xfff80000
-#else
-#define CONFIG_ENV_ADDR		(CONFIG_SYS_MONITOR_BASE - CONFIG_ENV_SECT_SIZE)
-#endif
-#define CONFIG_ENV_SIZE		0x2000
-#define CONFIG_ENV_SECT_SIZE	0x20000 /* 128K (one sector) */
-#else
-#define CONFIG_ENV_IS_IN_SDCARD	 1
-#define CONFIG_ENV_SIZE		0x2000
-/*env located after the u-boot image, size is 8K*/
-#define CONFIG_ENV_ADDR_IN_RAM  ((TEXT_BASE - 0x1000) + 0x80000)
+#if defined(CONFIG_SYS_RAMBOOT)
+#if defined(CONFIG_MK_RAMBOOT)
+	#define CONFIG_ENV_IS_NOWHERE	1       /* Store ENV in memory only */
+	#define CONFIG_ENV_ADDR		(CONFIG_SYS_MONITOR_BASE - 0x1000)
+	#define CONFIG_ENV_SIZE		0x2000
+#elif defined(CONFIG_RAMBOOT_NAND)
+	#define CONFIG_ENV_IS_IN_NAND	1
+	#define CONFIG_ENV_SIZE		CONFIG_SYS_NAND_BLOCK_SIZE
+	#define CONFIG_ENV_OFFSET	((512 * 1024) + CONFIG_SYS_NAND_BLOCK_SIZE)
+#elif defined(CONFIG_RAMBOOT_SPIFLASH)
+	#define CONFIG_ENV_IS_IN_SPI_FLASH	1
+	#define CONFIG_ENV_SPI_BUS		0
+	#define CONFIG_ENV_SPI_CS		0
+	#define CONFIG_ENV_SPI_MAX_HZ		10000000
+	#define CONFIG_ENV_SPI_MODE		0
+	#define CONFIG_ENV_SIZE			0x2000		/* 8KB */
+	#define CONFIG_ENV_OFFSET		0x100000	/* 1MB */
+	#define CONFIG_ENV_SECT_SIZE		0x10000
+#elif defined(CONFIG_RAMBOOT_SDCARD)
+	#define CONFIG_ENV_IS_IN_SDCARD		1
+	#define CONFIG_ENV_SIZE			0x2000
+    /*env located after the u-boot image, size is 8K*/
+    #define CONFIG_ENV_ADDR_IN_RAM  ((TEXT_BASE - 0x1000) + 0x80000)
+#endif
+#else
+	#define CONFIG_ENV_IS_IN_FLASH	1
+	#if CONFIG_SYS_MONITOR_BASE > 0xfff80000
+	#define CONFIG_ENV_ADDR		0xfff80000
+	#else
+	#define CONFIG_ENV_ADDR		(CONFIG_SYS_MONITOR_BASE - CONFIG_ENV_SECT_SIZE)
+	#endif
+	#define CONFIG_ENV_SIZE		0x2000
+	#define CONFIG_ENV_SECT_SIZE	0x20000 /* 128K (one sector) */
 #endif
 
 #define CONFIG_LOADS_ECHO	1	/* echo on for serial download */
@@ -529,13 +672,12 @@
  */
 #include <config_cmd_default.h>
 
-#define CONFIG_CMD_IRQ
-#define CONFIG_CMD_PING
-#define CONFIG_CMD_I2C
-#define CONFIG_CMD_MII
 #define CONFIG_CMD_DATE
 #define CONFIG_CMD_ELF
+#define CONFIG_CMD_I2C
 #define CONFIG_CMD_IRQ
+#define CONFIG_CMD_MII
+#define CONFIG_CMD_PING
 #define CONFIG_CMD_SETEXPR
 
 #if defined(CONFIG_PCI)
@@ -546,19 +688,48 @@
 
 #undef CONFIG_WATCHDOG			/* watchdog disabled */
 
-#define CONFIG_MMC	1
+#undef CONFIG_MMC	/* don't use MMC*/
 
 #ifdef CONFIG_MMC
-#define CONFIG_FSL_ESDHC
-#define CONFIG_SYS_FSL_ESDHC_ADDR	CONFIG_SYS_MPC85xx_ESDHC_ADDR
 #define CONFIG_CMD_MMC
+#define CONFIG_FSL_ESDHC
 #define CONFIG_GENERIC_MMC
+#define CONFIG_SYS_FSL_ESDHC_ADDR	CONFIG_SYS_MPC85xx_ESDHC_ADDR
+#define CONFIG_SYS_FSL_ESDHC_BROKEN_TIMEOUT
+
+/*------sirian------->*/
+#if defined(CONFIG_P1020)
+#define CONFIG_FSL_ESDHC_MULTIBLK_WORKAROUND	/* Multiblk transfer read
+						   command, CMD12 cause
+						   protocol violations on P1020
+						   so AUTOCMD12 used */
+#endif
+#endif
+/*<-----end sirian-----*/
+
+/*------sirian------->*/
+/************************************************************
+ * USB support
+ ************************************************************/
+#define CONFIG_USB_EHCI
+#ifdef CONFIG_USB_EHCI
+#define CONFIG_CMD_USB
+#define CONFIG_EHCI_HCD_INIT_AFTER_RESET
+#define CONFIG_USB_EHCI_FSL
+#define CONFIG_USB_STORAGE
+#define CONFIG_SYS_USB_EHCI_REGS_BASE		(CONFIG_SYS_CCSRBAR+0x22000)
+#endif
+/*<-----end sirian-----*/
+
+#if defined(CONFIG_MMC) || defined(CONFIG_USB_EHCI)
 #define CONFIG_CMD_EXT2
 #define CONFIG_CMD_FAT
 #define CONFIG_DOS_PARTITION
-#ifdef CONFIG_P2020
-#define CONFIG_SYS_FSL_ESDHC_USE_PIO /* P2020 eSDHC DMA is not functional*/
 #endif
+
+
+#ifdef CONFIG_P2020
+#define CONFIG_SYS_FSL_ESDHC_USE_PIO /* P2020 eSDHC DMA is not functional????  2011-07-28, sirian*/
 #endif
 
 /*
@@ -602,7 +773,39 @@
  * Environment Configuration
  */
 
-#define CONFIG_HOSTNAME		P1020WLAN
+ #if defined(CONFIG_TSEC_ENET)
+#define CONFIG_HAS_ETH0
+#define CONFIG_HAS_ETH1
+#define CONFIG_HAS_ETH2
+#endif
+#ifdef CONFIG_PCIE3
+#define CONFIG_HAS_ETH3
+#define CONFIG_HAS_ETH4
+#endif
+
+/* Select DTB, RAMDISK_SIZE and HOSTNAME based on Platform */
+#ifdef CONFIG_P2020
+#define PLATFORM_DTB		"p2020wlan.dtb"
+#define CONFIG_HOSTNAME	 P2020WLAN
+#define RAMDISK_SIZE		700000
+#endif
+#ifdef CONFIG_P2010
+#define PLATFORM_DTB		"p2010wlan.dtb"
+#define CONFIG_HOSTNAME	 P2010WLAN
+#define RAMDISK_SIZE		700000
+#endif
+#ifdef CONFIG_P1020
+#define PLATFORM_DTB		"p1020wlan.dtb"
+#define CONFIG_HOSTNAME	 P1020WLAN
+#define RAMDISK_SIZE		200000
+#endif
+#ifdef CONFIG_P1011
+#define PLATFORM_DTB		"p1011wlan.dtb"
+#define CONFIG_HOSTNAME	P1011WLAN
+#define RAMDISK_SIZE		200000
+#endif
+
+
 #define CONFIG_ROOTPATH		/opt/nfsroot
 #define CONFIG_BOOTFILE		uImage
 #define CONFIG_UBOOTPATH	u-boot.bin	/* U-Boot image on TFTP server */
@@ -616,7 +819,7 @@
 /* default location for tftp and bootm */
 #define CONFIG_LOADADDR		1000000
 
-#define CONFIG_BOOTDELAY 10	/* -1 disables auto-boot */
+#define CONFIG_BOOTDELAY  3	/* -1 disables auto-boot */
 #undef  CONFIG_BOOTARGS		/* the boot command will set bootargs */
 
 #define CONFIG_BAUDRATE	115200
@@ -636,7 +839,7 @@
  "ramdiskaddr=2000000\0"			\
  "ramdiskfile=rootfs.ext2.gz.uboot\0"		\
  "fdtaddr=c00000\0"				\
- "fdtfile=p1020wlan.dtb\0"		\
+ "fdtfile="PLATFORM_DTB"\0"		\
  "bdev=sda1\0"	\
  "jffs2nor=mtdblock3\0"	\
  "norbootaddr=ef080000\0"	\
@@ -701,6 +904,40 @@
  "bootm $loadaddr $ramdiskaddr $fdtaddr"
 
 //#define CONFIG_BOOTCOMMAND		CONFIG_HDBOOT
-#define CONFIG_BOOTCOMMAND			"setenv bootargs root=/dev/ram rw console=$consoledev,$baudrate $othbootargs ramdisk_size=120000;cp.l  EC500000 $ramdiskaddr 180000;  cp.l  EC100000 $loadaddr 100000;  cp.l  EC000000 $fdtaddr 40000;bootm $loadaddr $ramdiskaddr $fdtaddr"
+//#define CONFIG_BOOTCOMMAND			"setenv bootargs root=/dev/ram rw console=$consoledev,$baudrate $othbootargs ramdisk_size=120000;cp.l  EC500000 $ramdiskaddr 180000;  cp.l  EC100000 $loadaddr 100000;  cp.l  EC000000 $fdtaddr 40000;bootm $loadaddr $ramdiskaddr $fdtaddr"
+/*modified by sirian. 2011-03-07*/
+#define CONFIG_BOOTCOMMAND  "setenv bootargs root=/dev/mtdblock1 rootfstype=jffs2 rw console=ttyS0,115200 init=/sbin/init cache-sram-size=0x10000 mem=512M"
+
+#define	CONFIG_LEDGREENCMD  "setenv ledgreen 'gpioledg && mii write 0 1c b8ef && mii write 1 1c b4ef'"
+#define	CONFIG_LEDYELLOWCMD  "setenv ledyellow 'gpioledy && mii wirte 0 1c b8ef && mii write 1 1c b4ef'"
+
+#define GPIO_PWRLED_YELLOW  4
+#define GPIO_PWRLED_GREEN  5
+#define GPIO_WLANLED_0 13
+#define GPIO_WLANLED_1 14
+
+//Alvin add Jul 11, 2011
+#define MAP_ADD 0xeed80000
+#define MAP_LEN	0x100000
+
+#define GPIO_RESET_BUTTON_DOWN 0
+//#define in_be32(addr)	(*(volatile unsigned int*)(addr))
+#define GPIOX_SETTING_INPUT(_pgpio, num) clrbits_be32(_pgpio->gpdir, 1 << (31 - num))
+#define GPIOX_RESET_BUTTON(_pgpio, num) (in_be32(_pgpio->gpdat) & (1 << (31 - num)))
+//Add end
+
+#define GPIOX_OUTPUT_LOW(_pgpio, num) \
+    setbits_be32(_pgpio->gpdir, 1 << (31 - num)) ; \
+    clrbits_be32(_pgpio->gpodr, 1 << (31 - num));  \
+    clrbits_be32(_pgpio->gpdat, 1 << (31 - num));
+
+#define GPIOX_OUTPUT_HIGH(_pgpio, num) \
+    setbits_be32(_pgpio->gpdir, 1 << (31 - num)) ; \
+    clrbits_be32(_pgpio->gpodr, 1 << (31 - num));  \
+    setbits_be32(_pgpio->gpdat, 1 << (31 - num));
+
+#define GPIOX_LED_ON(_pgpio, num)  GPIOX_OUTPUT_LOW(_pgpio, num)
+
+#define GPIOX_LED_OFF(_pgpio, num)  GPIOX_OUTPUT_HIGH(_pgpio, num)
 
 #endif	/* __CONFIG_H */
