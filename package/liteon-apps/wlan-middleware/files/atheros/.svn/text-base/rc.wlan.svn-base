#!/bin/sh
####################################################################
#
# WLAN Initialization script
#
# This script will initialize the wlan modules required for operation
# of the AP hardware.  There are several environmental variables that
# can be set to modify the operation of the AP.  These are set to
# default values (or not used) if not defined.  Parameters are:
#
#  DFS_domainoverride   0=Unitialized (default),
#                       1=FCC Domain (FCC3, US)
#                       2=ETSI Domain (Europe)
#                       3=Japan Domain
#  DFS_usenol           1=Use channel NOL (default)
#  ATH_countrycode      Set Country Code (  Override the use of channel NOL
#                       Override default country code (-1 auto, default)
#                       Use country code 0x1ff for demo channels
#
###################################################################
#. /etc/wl/apcfg

###################################################################
## Function to unload all modules
###################################################################

_ath_unload()
{
    rmmod wlan_scan_ap
    rmmod wlan_scan_sta
    rmmod ath_pktlog
    sleep 2
    rmmod wlan_me
    sleep 2
    rmmod umac
    sleep 2
    rmmod ath_dev
    rmmod ath_dfs
    rmmod ath_spectral
    rmmod ath_rate_atheros
    rmmod ath_hal
    rmmod asf
    rmmod adf
    rmmod acfg_mod
}

KVER=`uname -r | cut -f 1 -d '-'`
MODULE_PATH=/lib/modules/$KVER/

###################################################################
## The input parameter is either up or down.  We assume that
## if no argument is provided, UP is intended
###################################################################

echo "Args: $#"

if [ $1 != down ]; then
    #
    # Determine if the modules are already up.  If so, simply
    # exit without error.
    #

    MODLIST=`lsmod | grep ath_hal`

    if [ "${MODLIST}" != "" ]; then
	rm -f /tmp/.apup
        exit 0
	fi

	#
    # Calculate the parameter values required.  Add the appropriate settings
    # to the strings
    #
    
    DFS_ARGS=""
    if [ "${DFS_domainoverride}" != "" ]; then
        DFS_ARGS="domainoverride=$DFS_domainoverride $DFS_ARGS"
    fi
    if [ "${DFS_usenol}" != "" ]; then
        DFS_ARGS="usenol=$DFS_usenol $DFS_ARGS"
    fi

    SPECTRAL_ARGS="maxholdintvl=5000 nfrssi=1 nobeacons=0"


#
# Finally, insert the modules
#
echo "insmode start ......"
    insmod $MODULE_PATH/acfg_mod.ko
    insmod $MODULE_PATH/adf.ko
    insmod $MODULE_PATH/asf.ko
    insmod $MODULE_PATH/ath_hal.ko
    insmod $MODULE_PATH/ath_rate_atheros.ko
    insmod $MODULE_PATH/ath_spectral.ko $SPECTRAL_ARGS
    if [ "${AP_NO_A_BAND}" != "1" ]; then
        #load DFS if A band is supported,default is supported and set AP_NO_A_BAND=1 if not supported
        insmod $MODULE_PATH/ath_dfs.ko $DFS_ARGS
    fi
    insmod $MODULE_PATH/ath_dev.ko
    insmod $MODULE_PATH/umac.ko
    insmod $MODULE_PATH/wlan_me.ko
    insmod $MODULE_PATH/ath_pktlog.ko

echo "insmode end ......"
# Remove the temporary file to notify VAP creation  is successful
   rm -f /tmp/.apup


WIFI0_FOUND=0
WIFI1_FOUND=0

cat /proc/net/dev | grep wifi0
if [ "$?" = "0" ]; then
    WIFI0_FOUND=1
fi  


cat /proc/net/dev | grep wifi1
if [ "$?" = "0" ]; then
    WIFI1_FOUND=1
fi  


#
# If Country Code has been specified, it needs to be set here using
# the iwpriv command.  This will be common for all VAPs
#

    if [ "$ATH_countrycode" != "" ]; then
        if [ "$WIFI0_FOUND" = "1" ]; then
            iwpriv wifi0 setCountryID $ATH_countrycode
        fi  

        if [ "$WIFI1_FOUND" = "1" ]; then
            iwpriv wifi1 setCountryID $ATH_countrycode
            iwpriv wifi1 ani_enable 1
        fi
      
        #Add wifi0 and wifi1 mac address configuration. Bevin@Liteon, 2013-11-18
#        if [ "$WIFI0_FOUND" = "1" ]; then
#            MAC_WIFI0=`cfg -v MAC_WIFI0`
#            if [ "$MAC_WIFI0" != "" ]; then
#                ifconfig wifi0 hw ether $MAC_WIFI0
#            fi
#        fi
#
#        if [ "$WIFI1_FOUND" = "1" ]; then
#            MAC_WIFI1=`cfg -v MAC_WIFI1`
#            if [ "$MAC_WIFI1" != "" ]; then
#                ifconfig wifi1 hw ether $MAC_WIFI1
#            fi
#        fi

        exit 0

    elif [ "${DEF_ATH_countrycode}" != "" ]; then
	    ##
    	## If ATH_countrycode is not set then default country code is  
    	## 841 for AP and 840 for station . DEF_ATH_countrycode is used to set the 
        ## correct country code. 
	    ##

        if [ "$WIFI0_FOUND" = "1" ]; then
            iwpriv wifi0 setCountryID $DEF_ATH_countrycode
        fi  

        if [ "${DEF_ATH_countrycode_2}" != "" ]; then 
            if [ "$WIFI1_FOUND" = "1" ]; then
                iwpriv wifi1 setCountryID $DEF_ATH_countrycode_2
            fi
        fi

        #Add wifi0 and wifi1 mac address configuration. Bevin@Liteon, 2013-11-18
#        if [ "$WIFI0_FOUND" = "1" ]; then
#            MAC_WIFI0=`cfg -v MAC_WIFI0`
#            if [ "$MAC_WIFI0" != "" ]; then
#                ifconfig wifi0 hw ether $MAC_WIFI0
#            fi
#        fi
#
#        if [ "$WIFI1_FOUND" = "1" ]; then
#            MAC_WIFI1=`cfg -v MAC_WIFI1`
#            if [ "$MAC_WIFI1" != "" ]; then
#                ifconfig wifi1 hw ether $MAC_WIFI1
#            fi
#        fi

        exit 0
    fi

else
#
# First, check to see if all of the VAPs have been eliminated
# If not, kill them all.  Don't continue, since this script
# will be called by killVAP all
#

    APS=`iwconfig | grep ath`

    if [ "${APS}" != "" ]; then
        /etc/wl/killVAP all

        #
        # We exit here since the above script will call this script
        # to delete all modules
        #

        exit
    fi

	_ath_unload

fi
