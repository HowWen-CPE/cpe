Index: dhcpcd-3.2.3.orig/Makefile
===================================================================
--- dhcpcd-3.2.3.orig.orig/Makefile	2008-02-25 16:28:19.000000000 +0800
+++ dhcpcd-3.2.3.orig/Makefile	2014-03-24 15:02:05.529459247 +0800
@@ -1,34 +1,81 @@
-# Makefile based on BSD's pmake.
-# Our mk stubs also work with GNU make.
-# Copyright 2008 Roy Marples <roy@marples.name>
+VERSION = 3.2.3
+CFLAGS ?= -O2 -pipe
 
-PROG=		dhcpcd
-SRCS=		arp.c client.c common.c configure.c dhcp.c dhcpcd.c duid.c \
-		info.c interface.c ipv4ll.c logger.c signal.c socket.c
-MAN=		dhcpcd.8
+# Should work for both GNU make and BSD make
 
-VERSION=	3.2.3
-CLEANFILES=	version.h dhcpcd.8
+# Saying that, this function only works with GNU Make :/
+check_gcc=$(shell if $(CC) $(1) -S -o /dev/null -xc /dev/null >/dev/null 2>&1; \
+	  then echo "$(1)"; else echo "$(2)"; fi)
+
+# Luckily we can do this more long winded thing with pmake used by the BSDs
+# FIXME: Look into making this into a loop
+WAFTST != if $(CC) -Wextra -S -o /dev/null -xc /dev/null >/dev/null 2>&1; \
+	  then echo "-Wdeclaration-after-statement"; fi
+WSEQ   != if $(CC) -Wextra -S -o /dev/null -xc /dev/null >/dev/null 2>&1; \
+	  then echo "-Wsequence-point"; fi
+WEXTRA != if $(CC) -Wextra -S -o /dev/null -xc /dev/null >/dev/null 2>&1; \
+	  then echo "-Wextra"; fi
+
+# Loads of nice flags to ensure our code is good
+# IMPORTANT: We should be using c99 instead of gnu99 but for some reason
+# generic linux headers as of 2.6.19 don't allow this in asm/types.h
+CFLAGS += -pedantic -std=gnu99 \
+    -Wall -Wunused -Wimplicit -Wshadow -Wformat=2 \
+    -Wmissing-declarations -Wno-missing-prototypes -Wwrite-strings \
+    -Wbad-function-cast -Wnested-externs -Wcomment -Winline \
+    -Wchar-subscripts -Wcast-align -Wno-format-nonliteral \
+    $(call check_gcc, -Wdeclaration-after-statement) \
+    $(call check_gcc, -Wsequence-point) \
+    $(call check_gcc, -Wextra) $(WAFTST) $(WSEQ) $(WEXTRA)
+
+# -Werrror is a good flag to use for development, but some platforms may
+#  have buggy headers from time to time, so you may need to comment this out
+#CFLAGS += -Werror
+
+# We define _BSD_SOURCE as GNU supports BSD too - which is nice :)
+CDEFS = -D_BSD_SOURCE
+
+INSTALL ?= install
+DESTDIR =
+SBINDIR = $(DESTDIR)/sbin
+MANDIR = $(DESTDIR)/usr/share/man
+
+SBIN_TARGETS = dhcpcd
+MAN8_TARGETS = dhcpcd.8
+TARGET = $(SBIN_TARGETS)
+
+dhcpcd_H = version.h
+dhcpcd_OBJS = arp.o client.o common.o configure.o dhcp.o dhcpcd.o \
+		interface.o logger.o signal.o socket.o duid.o info.o ipv4ll.o 
+
+# By default we don't need to link to anything
+# Except on Darwin where we need -lresolv, so they need to uncomment this
+#dhcpcd_LIBS = -lresolv
 
-BINDIR=		${PREFIX}/sbin
+dhcpcd: $(dhcpcd_H) $(dhcpcd_OBJS)
+	$(CC) $(LDFLAGS) $(dhcpcd_OBJS) $(dhcpcd_LIBS) -o dhcpcd
 
-.SUFFIXES:	.in
-
-MK=		mk
-include ${MK}/os.mk
-include ${MK}/cc.mk
-include ${MK}/prog.mk
-
-# os.mk should define this, but heh
-INFOD?=		/var/db
+version.h:
+	echo '#define VERSION "$(VERSION)"' > version.h
 
-LDADD+=		${LIBRESOLV} ${LIBRT}
-CFLAGS+=	-DINFODIR=\"${INFOD}\" ${FORK} ${RC}
+$(dhcpcd_OBJS): 
+	$(CC) $(CDEFS) $(CFLAGS) -c $*.c
 
-# As version.h is generated by us, hardcode the depend correctly.
-${SRCS}:	version.h
-version.h:
-	echo "#define VERSION \"${VERSION}\""> version.h
+all: $(TARGET)
 
-.in:
-	sed 's:@PREFIX@:${PREFIX}:g; s:@INFODIR@:${INFOD}:g' $< > $@
+install: $(TARGET)
+	$(INSTALL) -m 0755 -d $(SBINDIR)
+	$(INSTALL) -m 0755 $(SBIN_TARGETS) $(SBINDIR)
+	$(INSTALL) -m 0755 -d $(MANDIR)/man8
+#	$(INSTALL) -m 0755 $(MAN8_TARGETS) $(MANDIR)/man8
+
+clean:
+	rm -f $(TARGET) $(dhcpcd_H) *.o *~ *.core *.bz2
+
+dist:
+	$(INSTALL) -m 0755 -d /tmp/dhcpcd-$(VERSION)
+	cp -RPp . /tmp/dhcpcd-$(VERSION)
+	$(MAKE) -C /tmp/dhcpcd-$(VERSION) clean
+	rm -rf /tmp/dhcpcd-$(VERSION)/*.bz2 /tmp/dhcpcd-$(VERSION)/.svn
+	tar cvjpf dhcpcd-$(VERSION).tar.bz2 -C /tmp dhcpcd-$(VERSION)
+	rm -rf /tmp/dhcpcd-$(VERSION)
