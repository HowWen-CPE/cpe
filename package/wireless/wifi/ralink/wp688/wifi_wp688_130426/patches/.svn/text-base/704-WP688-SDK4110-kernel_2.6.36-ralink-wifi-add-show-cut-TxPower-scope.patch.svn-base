--- a/rt2860v2/ap/ap_cfg.c
+++ b/rt2860v2/ap/ap_cfg.c
@@ -14386,3 +14386,95 @@ VOID RTMPIoctlChannelInfo(
 }
 /* Sean@Liteon */
 
+
+/*add for cutting CutTxPowerScope function, daniel@liteon,2013-9-4----->*/	
+#ifdef LITEON_SRC_VALID
+/* 
+    ==========================================================================
+    Description:
+        Show Cut TxPower Scope
+    Arguments:
+        pAdapter                    Pointer to our adapter
+        wrq                           Pointer to the ioctl argument
+
+    Return Value:
+        None
+
+    Note:
+        Usage: 
+               1.) iwpriv rai0 CutTxPowerScope     	==> Cut TxPower Scope
+    ==========================================================================
+*/
+VOID RTMPIoctlCutTxPowerScope(
+	IN VOID *pAdSrc, 
+	IN RTMP_IOCTL_INPUT_STRUCT *wrq)
+{
+        PRTMP_ADAPTER pAd = (PRTMP_ADAPTER)pAdSrc;
+	INT Status;
+	PSTRING msg;
+
+	DBGPRINT(RT_DEBUG_WARN, ("CutTxPowerScope\n"));		
+       UCHAR    index;
+	CHAR      TxPwer = 0, TxPwer2 = 0;
+	CHAR      TxPwerCutLimit = 0;
+	UINT32 	Value = 0;
+	CHAR      CutValue = 0;
+	UCHAR    CurrentChannel;
+	CHAR      temp_comp;//the value is affacted by bw_power_delta,temprature,percentage_power
+	UINT32   macValue;
+	
+	CutValue=(CHAR)(0xff&pAd->CommonCfg.CutTxPower);
+	CurrentChannel = pAd->CommonCfg.Channel;
+	index = CurrentChannel-1;
+	TxPwerCutLimit =((pAd->TxPower[index].Power  < pAd->TxPower[index].Power2) ? pAd->TxPower[index].Power : pAd->TxPower[index].Power2);	
+	RTMP_IO_READ32(pAd, TX_ALG_CFG_1, &macValue);
+	temp_comp = (char)(macValue & 0x0000003F);
+	if ((temp_comp & 0x20) == 0x20)
+				temp_comp -= 64;
+	if (temp_comp<0)
+		TxPwerCutLimit=TxPwerCutLimit+temp_comp;
+	
+	DBGPRINT(RT_DEBUG_WARN, ("\n orig power1 is %d\n",pAd->TxPower[index].Power));	
+	DBGPRINT(RT_DEBUG_WARN, ("\n orig power2 is %d \n",pAd->TxPower[index].Power2));	
+	DBGPRINT(RT_DEBUG_WARN, ("\n temp_comp is %d \n",temp_comp));	
+	DBGPRINT(RT_DEBUG_WARN, ("\n cut value is %d \n",CutValue));	
+	DBGPRINT(RT_DEBUG_WARN, ("\n TxPwerCutLimit is %d \n",TxPwerCutLimit));	
+
+	if (TxPwerCutLimit<0)
+	{
+		//will not come to here.Guaranteed by correct calibrated data, which take low temperature condition in account
+		printk("Calibrated data is wrong, can not Cut Tx Power ,please adjust it!");		
+		return TRUE;
+	}
+
+
+	os_alloc_mem(pAd, (UCHAR **)&msg, sizeof(CHAR)*(2048));
+	
+	if (msg == NULL) {
+		DBGPRINT(RT_DEBUG_ERROR, ("ERROR===>%s: os_alloc_mem() fail!!!\n", __FUNCTION__));		
+		return;
+	}
+		
+	memset(msg, 0x00, 2048);
+	sprintf(msg, "\n");		
+
+	sprintf(msg + strlen(msg), "Min CutTxPower:0\n");
+	sprintf(msg + strlen(msg), "Max CutTxPower:%d\n", TxPwerCutLimit);
+
+
+	/* Copy the information into the user buffer */
+	wrq->u.data.length = strlen(msg);
+	Status = copy_to_user(wrq->u.data.pointer, msg, wrq->u.data.length);
+	
+	if (Status)
+	{
+		DBGPRINT(RT_DEBUG_ERROR, ("ERROR===>%s: copy_to_user() fail!!!\n", __FUNCTION__));
+		os_free_mem(NULL, msg);
+		return;
+	}	
+	
+	os_free_mem(NULL, msg);
+	
+}
+#endif
+/*<-----daniel@liteon,2013-8-19*/
\ No newline at end of file
--- a/rt2860v2/include/os/rt_os.h
+++ b/rt2860v2/include/os/rt_os.h
@@ -86,6 +86,12 @@
 #define RTPRIV_IOCTL_CHANNEL_INFO (SIOCIWFIRSTPRIV + 0x1D)
 /* Sean@Liteon */
 
+/*add for cutting CutTxPowerScope function, daniel@liteon,2013-9-4----->*/	
+#ifdef LITEON_SRC_VALID
+#define RTPRIV_IOCTL_CutTxPowerScope (SIOCIWFIRSTPRIV + 0x15)
+#endif
+/*<-----daniel@liteon,2013-9-4*/
+
 #endif /* CONFIG_STA_SUPPORT */
 
 #ifdef CONFIG_AP_SUPPORT
@@ -134,6 +140,12 @@
 #define RTPRIV_IOCTL_CHANNEL_INFO (SIOCIWFIRSTPRIV + 0x1D)
 /* Sean@Liteon */
 
+/*add for cutting CutTxPowerScope function, daniel@liteon,2013-9-4----->*/	
+#ifdef LITEON_SRC_VALID
+#define RTPRIV_IOCTL_CutTxPowerScope (SIOCIWFIRSTPRIV + 0x15)
+#endif
+/*<-----daniel@liteon,2013-9-4*/
+
 #endif /* CONFIG_AP_SUPPORT */
 
 #endif /* _RT_OS_H_ */
--- a/rt2860v2/include/rt_os_net.h
+++ b/rt2860v2/include/rt_os_net.h
@@ -273,6 +273,19 @@ VOID RTMPIoctlChannelInfo(
 	IN RTMP_IOCTL_INPUT_STRUCT *wrq);
 /* Sean@liteon */
 
+
+/*add for cutting CutTxPowerScope function, daniel@liteon,2013-9-4----->*/	
+#ifdef LITEON_SRC_VALID
+VOID RTMPIoctlCutTxPowerScope(
+	IN VOID *pAdSrc, 
+	IN RTMP_IOCTL_INPUT_STRUCT *wrq);
+#endif
+/*<-----daniel@liteon,2013-9-4*/
+
+
+
+
+
 VOID RTMPDrvOpen(
 	IN VOID						*pAd);
 
--- a/rt2860v2/os/linux/ap_ioctl.c
+++ b/rt2860v2/os/linux/ap_ioctl.c
@@ -87,6 +87,15 @@ struct iw_priv_args ap_privtab[] = {
   IW_PRIV_TYPE_CHAR | 1024, IW_PRIV_TYPE_CHAR | 1024,
   "channel_info"},
 /* Sean@Liteon */
+
+/*add for cutting CutTxPowerScope function, daniel@liteon,2013-9-4----->*/	
+#ifdef LITEON_SRC_VALID
+{ RTPRIV_IOCTL_CutTxPowerScope,
+  IW_PRIV_TYPE_CHAR | 1024, IW_PRIV_TYPE_CHAR | 1024,
+  "CutTxPowerScope"},
+#endif
+/*<-----daniel@liteon,2013-9-4*/
+
 #ifndef WIFI_DRIVER_PRE_PORTING
  /* Added by Bruce Liu, 2012-12-25 */
 { RTPRIV_IOCTL_ACK_TIMEOUT,
@@ -442,8 +451,16 @@ INT rt28xx_ap_ioctl(
 		case RTPRIV_IOCTL_CHANNEL_INFO:
 			RTMPIoctlChannelInfo(pAd, wrq);
 		break;
-/* Sean@Liteon */		
-		
+/* Sean@Liteon */	
+
+/*add for cutting CutTxPowerScope function, daniel@liteon,2013-9-4----->*/	
+#ifdef LITEON_SRC_VALID
+		case RTPRIV_IOCTL_CutTxPowerScope:
+			RTMPIoctlCutTxPowerScope(pAd, wrq);
+		break;
+#endif
+/*<-----daniel@liteon,2013-9-4*/
+
 		default:
 /*			DBGPRINT(RT_DEBUG_ERROR, ("IOCTL::unknown IOCTL's cmd = 0x%08x\n", cmd)); */
 			Status = RTMP_IO_EOPNOTSUPP;
