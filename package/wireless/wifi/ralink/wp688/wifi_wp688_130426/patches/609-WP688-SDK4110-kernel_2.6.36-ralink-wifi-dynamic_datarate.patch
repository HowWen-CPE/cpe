diff -urN a/rt2860v2/ap/ap_cfg.c b/rt2860v2/ap/ap_cfg.c
--- a/rt2860v2/ap/ap_cfg.c	2013-05-13 17:55:41.517723765 +0800
+++ b/rt2860v2/ap/ap_cfg.c	2013-05-13 17:57:31.409804105 +0800
@@ -9031,6 +9031,32 @@
     			(LONG)(pAd->ApCfg.RssiSample.LastRssi1 - pAd->BbpRssiToDbmDelta),
     			(LONG)(pAd->ApCfg.RssiSample.LastRssi2 - pAd->BbpRssiToDbmDelta));
 
+#ifndef WIFI_DRIVER_PRE_PORTING
+		/* Display Last Rx Rate and BF SNR of first Associated entry in MAC table */
+		if (pAd->MacTab.Size > 0)
+		{
+			static char *phyMode[4] = {"CCK", "OFDM", "MM", "GF"};
+			ULONG RxDataRate=0, TxDataRate=0;
+
+			for (i=0; i<MAX_LEN_OF_MAC_TABLE; i++)
+			{
+				PMAC_TABLE_ENTRY pEntry = &(pAd->MacTab.Content[i]);
+				if ((IS_ENTRY_CLIENT(pEntry) || IS_ENTRY_APCLI(pEntry)) && pEntry->Sst==SST_ASSOC)
+				{
+					UINT32 lastRxRate = pEntry->LastRxRate;
+					
+					ConvertMCS2Rate(pEntry->HTPhyMode, &RxDataRate,pAd->CommonCfg.RxMCS,pAd->CommonCfg.RxShortGI);
+					ConvertMCS2Rate(pEntry->HTPhyMode, &TxDataRate,pAd->CommonCfg.TxMCS,pAd->CommonCfg.TxShortGI);
+
+					sprintf(msg+strlen(msg), "Current RxTx Rate 			= MCS %d, %dM, %dM, %s, %cGI, %s%s\n",
+							pAd->CommonCfg.RxMCS,  RxDataRate, TxDataRate, GetBW(pEntry->HTPhyMode.field.BW),
+							((lastRxRate>>8) & 0x1)? 'S': 'L',
+							phyMode[(lastRxRate>>14) & 0x3],
+							((lastRxRate>>9) & 0x3)? ", STBC": " ");
+				}
+			}
+		}
+#else
     	/* Display Last Rx Rate and BF SNR of first Associated entry in MAC table */
     	if (pAd->MacTab.Size > 0)
     	{
@@ -9060,6 +9086,7 @@
 				}
 			}
     	}
+#endif
 #else
     	sprintf(msg+strlen(msg), "RSSI-A                          = %ld\n", (LONG)(pAd->ApCfg.RssiSample.LastRssi0 - pAd->BbpRssiToDbmDelta));
 		sprintf(msg+strlen(msg), "RSSI-B (if available)           = %ld\n", (LONG)(pAd->ApCfg.RssiSample.LastRssi1 - pAd->BbpRssiToDbmDelta));
diff -urN a/rt2860v2/ap/ap_data.c b/rt2860v2/ap/ap_data.c
--- a/rt2860v2/ap/ap_data.c	2013-05-13 17:55:41.517723765 +0800
+++ b/rt2860v2/ap/ap_data.c	2013-05-13 14:27:35.005723913 +0800
@@ -1676,6 +1676,11 @@
 
 		pMacEntry->isCached = TRUE;
 	}
+#ifndef WIFI_DRIVER_PRE_PORTING
+	pAd->CommonCfg.TxMCS = pTxBlk->pTransmit->field.MCS;
+	pAd->CommonCfg.TxShortGI = pTxBlk->pTransmit->field.ShortGI;
+#endif
+
 
 #ifdef TXBF_SUPPORT
 	if (pTxBlk->TxSndgPkt != SNDG_TYPE_DISABLE)
@@ -2343,6 +2348,11 @@
 	}
 
 	RTMPWriteTxWI_Data(pAd, (PTXWI_STRUC)(&pTxBlk->HeaderBuf[TXINFO_SIZE]), pTxBlk);
+#ifndef WIFI_DRIVER_PRE_PORTING
+	pAd->CommonCfg.TxMCS = pTxBlk->pTransmit->field.MCS;
+	pAd->CommonCfg.TxShortGI = pTxBlk->pTransmit->field.ShortGI;
+#endif
+
 
 	/*FreeNumber = GET_TXRING_FREENO(pAd, QueIdx); */
 
@@ -4503,6 +4513,10 @@
    	/* update rssi sample */
    	Update_Rssi_Sample(pAd, &pEntry->RssiSample, pRxWI);
 
+#ifndef WIFI_DRIVER_PRE_PORTING
+	pAd->CommonCfg.RxMCS = pRxWI->MCS;
+	pAd->CommonCfg.RxShortGI = pRxWI->ShortGI;
+#endif
 	if (pRxD->U2M)
 	{
 		pEntry->LastRxRate = (ULONG)((pRxWI->MCS) + (pRxWI->BW <<7) + (pRxWI->ShortGI <<8) + (pRxWI->STBC <<9) + (pRxWI->PHYMODE <<14));
diff -urN a/rt2860v2/common/cmm_info.c b/rt2860v2/common/cmm_info.c
--- a/rt2860v2/common/cmm_info.c	2013-05-13 17:55:41.509724671 +0800
+++ b/rt2860v2/common/cmm_info.c	2013-05-13 17:58:10.145784302 +0800
@@ -6643,6 +6643,50 @@
 	return;
 }
 
+#ifndef WIFI_DRIVER_PRE_PORTING
+void  ConvertMCS2Rate(HTTRANSMIT_SETTING HTSetting, ULONG* fLastTxRxRate, USHORT curMCS, USHORT shortGI)
+
+{
+	 INT MCSMappingRateTable[] =
+	{2,  4,   11,  22, /* CCK*/
+	12, 18,   24,  36, 48, 72, 96, 108, /* OFDM*/
+	13, 26,   39,  52,  78, 104, 117, 130, 26,  52,  78, 104, 156, 208, 234, 260, /* 20MHz, 800ns GI, MCS: 0 ~ 15*/
+	39, 78,  117, 156, 234, 312, 351, 390,										  /* 20MHz, 800ns GI, MCS: 16 ~ 23*/
+	27, 54,   81, 108, 162, 216, 243, 270, 54, 108, 162, 216, 324, 432, 486, 540, /* 40MHz, 800ns GI, MCS: 0 ~ 15*/
+	81, 162, 243, 324, 486, 648, 729, 810,										  /* 40MHz, 800ns GI, MCS: 16 ~ 23*/
+	14, 29,   43,  57,  87, 115, 130, 144, 29, 59,   87, 115, 173, 230, 260, 288, /* 20MHz, 400ns GI, MCS: 0 ~ 15*/
+	43, 87,  130, 173, 260, 317, 390, 433,										  /* 20MHz, 400ns GI, MCS: 16 ~ 23*/
+	30, 60,   90, 120, 180, 240, 270, 300, 60, 120, 180, 240, 360, 480, 540, 600, /* 40MHz, 400ns GI, MCS: 0 ~ 15*/
+	90, 180, 270, 360, 540, 720, 810, 900};
+
+	int rate_count = sizeof(MCSMappingRateTable)/sizeof(int);
+	int rate_index = 0;  
+	int value = 0;
+
+#ifdef DOT11_N_SUPPORT
+    if (HTSetting.field.MODE >= MODE_HTMIX)
+    {
+/*    	rate_index = 12 + ((UCHAR)ht_setting.field.BW *16) + ((UCHAR)ht_setting.field.ShortGI *32) + ((UCHAR)ht_setting.field.MCS);*/
+    	rate_index = 12 + ((UCHAR)HTSetting.field.BW *24) + ((UCHAR)shortGI *48) + ((UCHAR)curMCS);
+    }
+    else 
+#endif /* DOT11_N_SUPPORT */
+    if (HTSetting.field.MODE == MODE_OFDM)                
+    	rate_index = (UCHAR)(curMCS) + 4;
+    else if (HTSetting.field.MODE == MODE_CCK)   
+    	rate_index = (UCHAR)(curMCS);
+
+    if (rate_index < 0)
+        rate_index = 0;
+    
+    if (rate_index >= rate_count)
+        rate_index = rate_count-1;
+
+    value = (MCSMappingRateTable[rate_index] * 5)/10;
+	*fLastTxRxRate=(ULONG)value;
+	return;
+}
+#endif
 
 #ifdef TXBF_SUPPORT
 
diff -urN a/rt2860v2/include/rtmp.h b/rt2860v2/include/rtmp.h
--- a/rt2860v2/include/rtmp.h	2013-05-13 17:55:41.513724153 +0800
+++ b/rt2860v2/include/rtmp.h	2013-05-13 17:58:44.853771647 +0800
@@ -1898,6 +1898,12 @@
 	MO_CFG_STRUCT MO_Cfg;	/* data structure for mitigating microwave interference */
 #endif /* defined(MICROWAVE_OVEN_SUPPORT) || defined(DYNAMIC_VGA_SUPPORT) */
 	BOOLEAN bEnTemperatureTrack;
+#ifndef WIFI_DRIVER_PRE_PORTING
+	USHORT TxMCS:7;
+	USHORT TxShortGI:7;
+	USHORT RxMCS:7;
+	USHORT RxShortGI:7;
+#endif
 } COMMON_CONFIG, *PCOMMON_CONFIG;
 
 #ifdef DBG_CTRL_SUPPORT
@@ -9814,6 +9820,13 @@
     IN HTTRANSMIT_SETTING HTSetting, 
     OUT ULONG* fLastTxRxRate);
 
+#ifndef WIFI_DRIVER_PRE_PORTING
+void  ConvertMCS2Rate(
+    IN HTTRANSMIT_SETTING HTSetting, 
+    OUT ULONG* fLastTxRxRate,
+    IN USHORT curMCS,
+    IN USHORT shortGI);
+#endif
 
 #ifdef APCLI_SUPPORT
 #ifdef APCLI_WPA_SUPPLICANT_SUPPORT
