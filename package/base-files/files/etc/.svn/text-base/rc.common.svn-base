#!/bin/sh
# Copyright (C) 2006-2012 OpenWrt.org

. $IPKG_INSTROOT/lib/functions.sh
. $IPKG_INSTROOT/lib/functions/service.sh
. $PKG_INSTROOT/etc/mode-feature.sh
initscript=$1
action=${2:-help}
shift 2


err=0
log_msg="" 
no_log=0
mgmt=$(nvram show log_rule 0 web_mgmt)
start() {
	return 0
}

stop() {
	return 0
}

reload() {
	return 1
}

restart() {
	trap '' TERM
	stop "$@"
	start "$@"
}

boot() {
	start "$@"
}

shutdown() {
	stop
}

disable() {
	name="$(basename "${initscript}")"
	rm -f "$IPKG_INSTROOT"/etc/rc.d/S??$name
	rm -f "$IPKG_INSTROOT"/etc/rc.d/K??$name
	rm -f "$IPKG_INSTROOT"/etc/rc.d/T??$name
	rm -f "$IPKG_INSTROOT"/etc/rc.d/U??$name
	rm -f "$IPKG_INSTROOT"/etc/rc.d/L??$name
	rm -f "$IPKG_INSTROOT"/etc/rc.d/Q??$name
}

enable() {
	name="$(basename "${initscript}")"
	disable
#	[ -n "$START" -o -n "$STOP" ] || {
#		echo "/etc/init.d/$name does not have a START or STOP value"
#		return 1
#	}
	[ "$START" ] && ln -s "../init.d/$name" "$IPKG_INSTROOT/etc/rc.d/S${START}${name##S[0-9][0-9]}"
	[ "$STOP"  ] && ln -s "../init.d/$name" "$IPKG_INSTROOT/etc/rc.d/K${STOP}${name##K[0-9][0-9]}"
	[ "$TRIGGER"  ] && ln -s "../init.d/$name" "$IPKG_INSTROOT/etc/rc.d/T${TRIGGER}${name##T[0-9][0-9]}"
	[ "$TRIGGER_STOP"  ] && ln -s "../init.d/$name" "$IPKG_INSTROOT/etc/rc.d/W${TRIGGER}${name##T[0-9][0-9]}"
	[ "$USBSTORAGE" ] && ln -s "../init.d/$name" "$IPKG_INSTROOT/etc/rc.d/U${USBSTORAGE}${name##U[0-9][0-9]}"
	[ "$LANTRIGGER" ] && ln -s "../init.d/$name" "$IPKG_INSTROOT/etc/rc.d/L${LANTRIGGER}${name##L[0-9][0-9]}"
	[ "$LANTRIGGER_STOP" ] && ln -s "../init.d/$name" "$IPKG_INSTROOT/etc/rc.d/Q${LANTRIGGER_STOP}${name##Q[0-9][0-9]}"
}

enabled() {
	name="$(basename "${initscript}")"
	[ -x "$IPKG_INSTROOT/etc/rc.d/S${START}${name##S[0-9][0-9]}" ]
}

depends() {
	return 0
}

#$1:service name $2:action $3:status
#log_usr () {
#     logger "EZP_USR" ${1}: $2 ${3} $4
#}
help() {
	cat <<EOF
Syntax: $initscript [command]

Available commands:
	start	Start the service
	stop	Stop the service
	restart	Restart the service
	reload	Reload configuration files (or restart if that fails)
	enable	Enable service autostart
	disable	Disable service autostart
$EXTRA_HELP
EOF
}

${INIT_TRACE:+set -x}

. "$initscript"

ALL_COMMANDS="start stop reload restart boot shutdown enable disable enabled depends ${EXTRA_COMMANDS}"
list_contains ALL_COMMANDS "$action" || action=help
[ "$action" = "reload" ] && action='eval reload "$@" || restart "$@" && :'
$action "$@"




[ "$no_log" = "1" ] && exit $err
#mgmt = $(nvram show log_rule 0 web_mgmt)
if [ "$mgmt" = "1" ]; then
   if [ -n "$log_msg" ];then
   if [ "$err" = "0" ] ; then
       logger "EZP_USR"  $log_msg $action OK
   else
       logger "EZP_USR"  $log_msg $action Failed
   fi
   fi
fi

exit $err
