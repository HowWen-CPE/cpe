From 47e82b4b5646c4f54a32c87fdc42fa9a1b590f36 Mon Sep 17 00:00:00 2001
From: Sandeep Gopalpet <sandeep.kumar@freescale.com>
Date: Tue, 5 Jan 2010 17:05:05 +0530
Subject: [PATCH] gianfar: Avoid programing rxic/txic regs when in MQ_MG_MODE

Programming rxic/txic regs is not required when in MQ_MG_MODE
as we are aleady programming rxic0/txic0 regs.

Signed-off-by: Sandeep Gopalpet <sandeep.kumar@freescale.com>
---
 drivers/net/gianfar.c |   17 ++++++++++-------
 1 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/drivers/net/gianfar.c b/drivers/net/gianfar.c
index 4422af6..997ef97 100644
--- a/drivers/net/gianfar.c
+++ b/drivers/net/gianfar.c
@@ -1528,9 +1528,11 @@ void gfar_configure_tx_coalescing(struct gfar_private *priv,
 	/* Backward compatible case ---- even if we enable
 	 * multiple queues, there's only single reg to program
 	 */
-	gfar_write(&regs->txic, 0);
-	if(likely(priv->tx_queue[0]->txcoalescing))
-		gfar_write(&regs->txic, priv->tx_queue[0]->txic);
+	if (priv->mode == SQ_SG_MODE) {
+		gfar_write(&regs->txic, 0);
+		if (likely(priv->tx_queue[0]->txcoalescing))
+			gfar_write(&regs->txic, priv->tx_queue[0]->txic);
+	}
 
 	if (priv->mode == MQ_MG_MODE) {
 		baddr = &regs->txic0;
@@ -1540,7 +1542,6 @@ void gfar_configure_tx_coalescing(struct gfar_private *priv,
 				gfar_write(baddr + i, priv->tx_queue[i]->txic);
 			}
 		}
-
 	}
 }
 
@@ -1554,9 +1555,11 @@ void gfar_configure_rx_coalescing(struct gfar_private *priv,
 	/* Backward compatible case ---- even if we enable
 	 * multiple queues, there's only single reg to program
 	 */
-	gfar_write(&regs->rxic, 0);
-	if(unlikely(priv->rx_queue[0]->rxcoalescing))
-		gfar_write(&regs->rxic, priv->rx_queue[0]->rxic);
+	if (priv->mode == SQ_SG_MODE) {
+		gfar_write(&regs->rxic, 0);
+		if (unlikely(priv->rx_queue[0]->rxcoalescing))
+			gfar_write(&regs->rxic, priv->rx_queue[0]->rxic);
+	}
 
 	if (priv->mode == MQ_MG_MODE) {
 		baddr = &regs->rxic0;
-- 
1.5.2.2

