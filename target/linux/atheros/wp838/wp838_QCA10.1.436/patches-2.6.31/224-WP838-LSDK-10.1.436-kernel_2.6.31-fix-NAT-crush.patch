Index: linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_dccp.c
===================================================================
--- linux-2.6.31.orig/net/ipv4/netfilter/nf_nat_proto_dccp.c	2009-09-10 06:13:59.000000000 +0800
+++ linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_dccp.c	2014-01-03 14:56:35.735610706 +0800
@@ -16,6 +16,7 @@
 #include <linux/ip.h>
 #include <linux/dccp.h>
 
+#include <net/ip.h>
 #include <net/netfilter/nf_conntrack.h>
 #include <net/netfilter/nf_nat.h>
 #include <net/netfilter/nf_nat_protocol.h>
@@ -40,7 +41,7 @@
 {
 	const struct iphdr *iph = (const void *)(skb->data + iphdroff);
 	struct dccp_hdr *hdr;
-	unsigned int hdroff = iphdroff + iph->ihl * 4;
+	unsigned int hdroff = iphdroff + ip_hdrlen(skb);
 	__be32 oldip, newip;
 	__be16 *portptr, oldport, newport;
 	int hdrsize = 8; /* DCCP connection tracking guarantees this much */
Index: linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_icmp.c
===================================================================
--- linux-2.6.31.orig/net/ipv4/netfilter/nf_nat_proto_icmp.c	2009-09-10 06:13:59.000000000 +0800
+++ linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_icmp.c	2014-01-03 14:56:35.735610706 +0800
@@ -12,6 +12,7 @@
 #include <linux/icmp.h>
 
 #include <linux/netfilter.h>
+#include <net/ip.h>
 #include <net/netfilter/nf_nat.h>
 #include <net/netfilter/nf_nat_core.h>
 #include <net/netfilter/nf_nat_rule.h>
@@ -59,7 +60,7 @@
 {
 	const struct iphdr *iph = (struct iphdr *)(skb->data + iphdroff);
 	struct icmphdr *hdr;
-	unsigned int hdroff = iphdroff + iph->ihl*4;
+	unsigned int hdroff = iphdroff + ip_hdrlen(skb);
 
 	if (!skb_make_writable(skb, hdroff + sizeof(*hdr)))
 		return false;
Index: linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_sctp.c
===================================================================
--- linux-2.6.31.orig/net/ipv4/netfilter/nf_nat_proto_sctp.c	2009-09-10 06:13:59.000000000 +0800
+++ linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_sctp.c	2014-01-03 14:56:35.735610706 +0800
@@ -10,6 +10,7 @@
 #include <linux/init.h>
 #include <linux/ip.h>
 #include <linux/sctp.h>
+#include <net/ip.h>
 #include <net/sctp/checksum.h>
 
 #include <net/netfilter/nf_nat_protocol.h>
@@ -35,7 +36,7 @@
 	const struct iphdr *iph = (struct iphdr *)(skb->data + iphdroff);
 	struct sk_buff *frag;
 	sctp_sctphdr_t *hdr;
-	unsigned int hdroff = iphdroff + iph->ihl*4;
+	unsigned int hdroff = iphdroff + ip_hdrlen(skb);
 	__be32 oldip, newip;
 	__be32 crc32;
 
Index: linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_tcp.c
===================================================================
--- linux-2.6.31.orig/net/ipv4/netfilter/nf_nat_proto_tcp.c	2009-09-10 06:13:59.000000000 +0800
+++ linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_tcp.c	2014-01-03 14:56:35.738974052 +0800
@@ -13,6 +13,7 @@
 
 #include <linux/netfilter.h>
 #include <linux/netfilter/nfnetlink_conntrack.h>
+#include <net/ip.h>
 #include <net/netfilter/nf_nat.h>
 #include <net/netfilter/nf_nat_rule.h>
 #include <net/netfilter/nf_nat_protocol.h>
@@ -38,7 +39,7 @@
 {
 	const struct iphdr *iph = (struct iphdr *)(skb->data + iphdroff);
 	struct tcphdr *hdr;
-	unsigned int hdroff = iphdroff + iph->ihl*4;
+	unsigned int hdroff = iphdroff + ip_hdrlen(skb);
 	__be32 oldip, newip;
 	__be16 *portptr, newport, oldport;
 	int hdrsize = 8; /* TCP connection tracking guarantees this much */
Index: linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_udp.c
===================================================================
--- linux-2.6.31.orig/net/ipv4/netfilter/nf_nat_proto_udp.c	2009-09-10 06:13:59.000000000 +0800
+++ linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_udp.c	2014-01-03 14:56:35.738974052 +0800
@@ -12,6 +12,7 @@
 #include <linux/udp.h>
 
 #include <linux/netfilter.h>
+#include <net/ip.h>
 #include <net/netfilter/nf_nat.h>
 #include <net/netfilter/nf_nat_core.h>
 #include <net/netfilter/nf_nat_rule.h>
@@ -37,7 +38,7 @@
 {
 	const struct iphdr *iph = (struct iphdr *)(skb->data + iphdroff);
 	struct udphdr *hdr;
-	unsigned int hdroff = iphdroff + iph->ihl*4;
+	unsigned int hdroff = iphdroff + ip_hdrlen(skb);
 	__be32 oldip, newip;
 	__be16 *portptr, newport;
 
Index: linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_udplite.c
===================================================================
--- linux-2.6.31.orig/net/ipv4/netfilter/nf_nat_proto_udplite.c	2009-09-10 06:13:59.000000000 +0800
+++ linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_udplite.c	2014-01-03 14:56:35.738974052 +0800
@@ -13,6 +13,7 @@
 #include <linux/udp.h>
 
 #include <linux/netfilter.h>
+#include <net/ip.h>
 #include <net/netfilter/nf_nat.h>
 #include <net/netfilter/nf_nat_protocol.h>
 
@@ -36,7 +37,7 @@
 {
 	const struct iphdr *iph = (struct iphdr *)(skb->data + iphdroff);
 	struct udphdr *hdr;
-	unsigned int hdroff = iphdroff + iph->ihl*4;
+	unsigned int hdroff = iphdroff + ip_hdrlen(skb);
 	__be32 oldip, newip;
 	__be16 *portptr, newport;
 
Index: linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_gre.c
===================================================================
--- linux-2.6.31.orig/net/ipv4/netfilter/nf_nat_proto_gre.c	2014-01-03 14:57:32.879028177 +0800
+++ linux-2.6.31/net/ipv4/netfilter/nf_nat_proto_gre.c	2014-01-03 14:58:59.983631106 +0800
@@ -28,6 +28,7 @@
 #include <linux/ip.h>
 
 #include <net/netfilter/nf_nat.h>
+#include <net/ip.h>
 #include <net/netfilter/nf_nat_rule.h>
 #include <net/netfilter/nf_nat_protocol.h>
 #include <linux/netfilter/nf_conntrack_proto_gre.h>
@@ -87,7 +88,7 @@
 	const struct gre_hdr *greh;
 	struct gre_hdr_pptp *pgreh;
 	const struct iphdr *iph = (struct iphdr *)(skb->data + iphdroff);
-	unsigned int hdroff = iphdroff + iph->ihl * 4;
+	unsigned int hdroff = iphdroff + ip_hdrlen(skb);
 
 	/* pgreh includes two optional 32bit fields which are not required
 	 * to be there.  That's where the magic '8' comes from */
